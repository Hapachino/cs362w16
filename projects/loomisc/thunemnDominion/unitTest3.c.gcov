        -:    0:Source:unitTest3.c
        -:    0:Graph:unitTest3.gcno
        -:    0:Data:unitTest3.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2: * Unit test for getCost function
        -:    3: *
        -:    4: * Business Rules:
        -:    5: *  1.	Each card should return its correct cost
        -:    6: *	2.	Invalid card should return -1
        -:    7: *
        -:    8: * unitTest3: unitTest3.c dominion.o rngs.o
        -:    9: *      gcc -o unitTest3 -g unitTest3.c dominion.o rngs.o $(FLAGS)
        -:   10: *
        -:   11: */
        -:   12:
        -:   13:#include "dominion.h"
        -:   14:#include "dominion_helpers.h"
        -:   15:#include <string.h>
        -:   16:#include <stdio.h>
        -:   17:#include <assert.h>
        -:   18:#include "rngs.h"
        -:   19:
        -:   20://set NOISY_TEST to 0 to remove prinftf's from output
        -:   21:#define NOISY_TEST 1
        -:   22:
        1:   23:int main() {
        -:   24:    int i, cost;
        1:   25:    int isCorrect = 0;
        -:   26:    int card_cost[27] = {0, 2, 5, 8, 0, 3, 6, 6, 5, 4, 4, 5, 4, 4,
        1:   27:                         3, 4, 3, 5, 3, 5, 3, 4, 2, 5, 4, 4, 4};
        -:   28:
        1:   29:    printf("TESTING getCost()\n");
        1:   30:    printf("TESTING all available cards:\n");
        -:   31:    //test each available card
       28:   32:    for(i = 0; i < 27; ++i) {
       27:   33:        cost = getCost(i);
       27:   34:        if(cost != card_cost[i])
    #####:   35:            isCorrect = -1;
        -:   36:    }
        -:   37:#if (NOISY_TEST == 1)
        1:   38:    if(isCorrect != -1)
        1:   39:        printf("TEST PASSED\n");
        -:   40:    else
    #####:   41:        printf("TEST FAILED\n");
        -:   42:
        -:   43:    //test a card which does not exist
        1:   44:    printf("TESTING non-existent card:\n");
        1:   45:    cost = getCost(35);
        1:   46:    if(cost == -1)
        1:   47:        printf("TEST PASSED\n");
        -:   48:    else
    #####:   49:        printf("TEST FAILED\n");
        -:   50:#endif
        -:   51:
        1:   52:    printf("\nAll tests passed: getCost()\n");
        -:   53:
        1:   54:    return 0;
        -:   55:}
