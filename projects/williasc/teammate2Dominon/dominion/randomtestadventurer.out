TEST adventurer Card.

 TEST 1 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 2 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 3 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 4 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 5 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 6 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 7 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 8 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 9 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 10 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 11 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 12 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 13 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 14 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 15 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 16 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 17 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 18 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 19 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 20 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 21 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 22 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 23 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 24 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 25 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 26 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 27 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 28 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 29 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 30 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 31 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 32 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 33 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 34 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 35 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 36 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 37 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 38 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 39 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 40 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 41 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 42 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 43 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 44 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 45 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 46 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 47 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 48 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 49 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 50 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 51 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 52 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 53 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 54 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 55 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 56 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 57 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 58 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 59 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 60 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 61 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 62 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 63 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 64 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 65 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 66 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 67 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 68 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 69 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 70 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 71 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 72 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 73 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 74 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 75 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 76 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 77 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 78 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 79 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 80 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 81 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 82 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 83 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 84 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 85 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 86 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 87 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 88 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 89 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 90 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 91 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 92 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 93 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 94 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 95 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 96 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 97 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 98 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 99 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 100 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 101 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 102 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 103 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 104 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 105 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 106 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 107 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 108 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 109 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 110 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 111 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 112 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 113 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 114 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 115 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 116 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 117 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 118 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 119 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 120 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 121 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 122 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 123 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 124 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 125 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 126 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 127 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 128 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 129 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 130 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 131 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 132 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 133 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 134 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 135 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 136 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 137 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 138 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 139 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 140 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 141 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 142 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 143 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 144 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 145 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 146 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 147 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 148 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 149 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 150 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 151 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 152 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 153 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 154 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 155 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 156 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 157 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 158 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 159 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 160 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 161 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 162 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 163 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 164 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 165 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 166 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 167 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 168 

Failure: discard not incremented properly
Failure: game states are not identical

 TEST 169 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 170 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 171 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 172 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 173 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 174 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 175 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 176 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 177 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 178 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 179 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 180 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 181 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 182 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 183 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 184 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 185 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 186 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 187 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 188 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 189 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 190 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 191 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 192 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 193 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 194 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 195 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 196 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 197 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 198 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 199 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 200 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 201 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 202 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 203 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 204 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 205 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 206 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 207 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 208 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 209 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 210 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 211 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 212 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 213 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 214 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 215 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 216 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 217 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 218 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 219 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 220 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 221 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 222 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 223 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 224 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 225 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 226 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 227 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 228 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 229 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 230 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 231 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 232 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 233 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 234 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 235 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 236 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 237 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 238 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 239 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 240 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 241 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 242 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 243 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 244 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 245 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 246 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 247 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 248 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 249 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 250 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 251 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 252 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 253 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 254 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 255 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 256 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 257 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 258 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 259 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 260 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 261 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 262 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 263 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 264 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 265 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 266 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 267 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 268 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 269 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 270 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 271 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 272 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 273 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 274 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 275 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 276 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 277 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 278 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 279 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 280 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 281 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 282 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 283 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 284 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 285 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 286 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 287 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 288 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 289 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 290 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 291 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 292 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 293 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 294 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 295 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 296 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 297 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 298 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 299 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 300 

Failure: discard not incremented properly
Failure: game states are not identical

 TEST 301 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 302 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 303 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 304 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 305 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 306 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 307 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 308 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 309 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 310 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 311 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 312 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 313 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 314 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 315 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 316 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 317 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 318 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 319 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 320 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 321 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 322 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 323 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 324 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 325 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 326 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 327 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 328 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 329 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 330 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 331 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 332 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 333 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 334 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 335 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 336 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 337 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 338 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 339 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 340 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 341 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 342 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 343 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 344 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 345 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 346 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 347 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 348 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 349 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 350 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 351 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 352 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 353 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 354 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 355 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 356 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 357 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 358 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 359 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 360 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 361 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 362 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 363 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 364 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 365 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 366 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 367 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 368 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 369 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 370 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 371 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 372 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 373 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 374 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 375 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 376 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 377 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 378 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 379 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 380 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 381 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 382 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 383 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 384 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 385 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 386 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 387 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 388 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 389 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 390 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 391 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 392 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 393 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 394 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 395 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 396 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 397 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 398 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 399 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 400 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 401 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 402 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 403 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 404 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 405 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 406 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 407 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 408 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 409 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 410 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 411 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 412 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 413 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 414 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 415 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 416 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 417 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 418 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 419 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 420 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 421 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 422 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 423 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 424 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 425 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 426 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 427 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 428 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 429 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 430 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 431 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 432 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 433 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 434 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 435 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 436 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 437 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 438 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 439 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 440 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 441 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 442 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 443 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 444 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 445 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 446 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 447 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 448 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 449 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 450 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 451 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 452 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 453 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 454 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 455 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 456 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 457 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 458 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 459 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 460 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 461 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 462 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 463 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 464 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 465 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 466 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 467 

Failure: discard not incremented properly
Failure: game states are not identical

 TEST 468 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 469 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 470 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 471 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 472 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 473 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 474 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 475 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 476 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 477 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 478 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 479 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 480 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 481 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 482 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 483 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 484 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 485 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 486 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 487 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 488 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 489 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 490 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 491 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 492 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 493 

Success: both game states identical

 TEST 494 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 495 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 496 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 497 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 498 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 499 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 500 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 501 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 502 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 503 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 504 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 505 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 506 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 507 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 508 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 509 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 510 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 511 

Success: both game states identical

 TEST 512 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 513 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 514 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 515 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 516 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 517 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 518 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 519 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 520 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 521 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 522 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 523 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 524 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 525 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 526 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 527 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 528 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 529 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 530 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 531 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 532 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 533 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 534 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 535 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 536 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 537 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 538 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 539 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 540 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 541 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 542 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 543 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 544 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 545 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 546 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 547 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 548 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 549 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 550 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 551 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 552 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 553 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 554 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 555 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 556 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 557 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 558 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 559 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 560 

Failure: discard not incremented properly
Failure: game states are not identical

 TEST 561 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 562 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 563 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 564 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 565 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 566 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 567 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 568 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 569 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 570 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 571 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 572 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 573 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 574 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 575 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 576 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 577 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 578 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 579 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 580 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 581 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 582 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 583 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 584 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 585 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 586 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 587 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 588 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 589 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 590 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 591 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 592 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 593 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 594 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 595 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 596 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 597 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 598 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 599 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 600 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 601 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 602 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 603 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 604 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 605 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 606 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 607 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 608 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 609 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 610 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 611 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 612 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 613 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 614 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 615 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 616 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 617 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 618 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 619 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 620 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 621 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 622 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 623 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 624 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 625 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 626 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 627 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 628 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 629 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 630 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 631 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 632 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 633 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 634 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 635 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 636 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 637 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 638 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 639 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 640 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 641 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 642 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 643 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 644 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 645 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 646 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 647 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 648 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 649 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 650 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 651 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 652 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 653 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 654 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 655 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 656 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 657 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 658 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 659 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 660 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 661 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 662 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 663 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 664 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 665 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 666 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 667 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 668 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 669 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 670 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 671 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 672 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 673 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 674 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 675 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 676 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 677 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 678 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 679 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 680 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 681 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 682 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 683 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 684 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 685 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 686 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 687 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 688 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 689 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 690 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 691 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 692 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 693 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 694 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 695 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 696 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 697 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 698 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 699 

Failure: discard not incremented properly
Failure: game states are not identical

 TEST 700 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 701 

Failure: discard not incremented properly
Failure: game states are not identical

 TEST 702 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 703 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 704 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 705 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 706 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 707 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 708 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 709 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 710 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 711 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 712 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 713 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 714 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 715 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 716 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 717 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 718 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 719 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 720 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 721 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 722 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 723 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 724 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 725 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 726 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 727 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 728 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 729 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 730 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 731 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 732 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 733 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 734 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 735 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 736 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 737 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 738 

Failure: discard not incremented properly
Failure: game states are not identical

 TEST 739 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 740 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 741 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 742 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 743 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 744 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 745 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 746 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 747 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 748 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 749 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 750 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 751 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 752 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 753 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 754 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 755 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 756 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 757 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 758 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 759 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 760 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 761 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 762 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 763 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 764 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 765 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 766 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 767 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 768 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 769 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 770 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 771 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 772 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 773 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 774 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 775 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 776 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 777 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 778 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 779 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 780 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 781 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 782 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 783 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 784 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 785 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 786 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 787 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 788 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 789 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 790 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 791 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 792 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 793 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 794 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 795 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 796 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 797 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 798 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 799 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 800 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 801 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 802 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 803 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 804 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 805 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 806 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 807 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 808 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 809 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 810 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 811 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 812 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 813 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 814 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 815 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 816 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 817 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 818 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 819 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 820 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 821 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 822 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 823 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 824 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 825 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 826 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 827 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 828 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 829 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 830 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 831 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 832 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 833 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 834 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 835 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 836 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 837 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 838 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 839 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 840 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 841 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 842 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 843 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 844 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 845 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 846 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 847 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 848 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 849 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 850 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 851 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 852 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 853 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 854 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 855 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 856 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 857 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 858 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 859 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 860 

Success: both game states identical

 TEST 861 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 862 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 863 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 864 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 865 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 866 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 867 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 868 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 869 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 870 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 871 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 872 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 873 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 874 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 875 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 876 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 877 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 878 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 879 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 880 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 881 

Failure: discard not incremented properly
Failure: game states are not identical

 TEST 882 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 883 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 884 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 885 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 886 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 887 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 888 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 889 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 890 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 891 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 892 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 893 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 894 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 895 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 896 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 897 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 898 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 899 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 900 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 901 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 902 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 903 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 904 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 905 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 906 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 907 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 908 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 909 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 910 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 911 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 912 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 913 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 914 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 915 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 916 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 917 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 918 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 919 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 920 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 921 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 922 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 923 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 924 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 925 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 926 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 927 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 928 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 929 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 930 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 931 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 932 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 933 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 934 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 935 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 936 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 937 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 938 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 939 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 940 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 941 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 942 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 943 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 944 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 945 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 946 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 947 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 948 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 949 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 950 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 951 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 952 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 953 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 954 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 955 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 956 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 957 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 958 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 959 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 960 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 961 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 962 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 963 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 964 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 965 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 966 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 967 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 968 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 969 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 970 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 971 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 972 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 973 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 974 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 975 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 976 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 977 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 978 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 979 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 980 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 981 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 982 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 983 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 984 

Failure: incorrect number of treasures received
Success: both game states identical

 TEST 985 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 986 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 987 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 988 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 989 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 990 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 991 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 992 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 993 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 994 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 995 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 996 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 997 

Failure: incorrect number of treasures received
Failure: game states are not identical

 TEST 998 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 999 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 TEST 1000 

Failure: incorrect number of treasures received
Failure: discard not incremented properly
Failure: game states are not identical

 DONE 

File 'dominion.c'
Lines executed:9.90% of 576
Branches executed:6.24% of 417
Taken at least once:5.04% of 417
Calls executed:4.26% of 94
dominion.c:creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:2
        -:    0:Programs:2
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function compare called 0 returned 0% blocks executed 0%
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
branch  0 never executed
branch  1 never executed
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
branch  0 never executed
branch  1 never executed
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
function newGame called 0 returned 0% blocks executed 0%
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
function kingdomCards called 0 returned 0% blocks executed 0%
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
function initializeGame called 0 returned 0% blocks executed 0%
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;			
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
call    0 never executed
    #####:   45:  PutSeed((long)randomSeed);
call    0 never executed
        -:   46:  
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
branch  0 never executed
branch  1 never executed
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
branch  0 never executed
branch  1 never executed
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
branch  0 never executed
branch  1 never executed
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
branch  0 never executed
branch  1 never executed
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
branch  0 never executed
branch  1 never executed
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
branch  0 never executed
branch  1 never executed
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
branch  0 never executed
branch  1 never executed
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
branch  0 never executed
branch  1 never executed
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){ 
branch  0 never executed
branch  1 never executed
    #####:  116:		    state->supplyCount[i] = 8; 
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
branch  0 never executed
branch  1 never executed
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
branch  0 never executed
branch  1 never executed
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;		
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  164:    {  
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:  
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
branch  0 never executed
branch  1 never executed
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
branch  0 never executed
branch  1 never executed
    #####:  193:    drawCard(state->whoseTurn, state);
call    0 never executed
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
call    0 never executed
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
function shuffle called 1542 returned 100% blocks executed 20%
     1542:  201:int shuffle(int player, struct gameState *state) {
        -:  202: 
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
     1542:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
     1542:  209:  if (state->deckCount[player] < 1)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
     1542:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
call    0 never executed
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
branch  0 never executed
branch  1 never executed
    #####:  215:    card = floor(Random() * state->deckCount[player]);
call    0 never executed
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
branch  0 never executed
branch  1 never executed
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
branch  0 never executed
branch  1 never executed
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
function playCard called 0 returned 0% blocks executed 0%
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
        -:  232:{	
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
branch  0 never executed
branch  1 never executed
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:	
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
branch  0 never executed
branch  1 never executed
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:	
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
call    0 never executed
        -:  250:	
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:	
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:	
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
call    0 never executed
        -:  268:	
    #####:  269:  return 0;
        -:  270:}
        -:  271:
function buyCard called 0 returned 0% blocks executed 0%
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
    #####:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
branch  0 never executed
branch  1 never executed
    #####:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  291:    if (DEBUG) 
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
call    0 never executed
        -:  298:  
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
call    0 never executed
    #####:  300:    state->numBuys--;
    #####:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:    
    #####:  308:  return 0;
        -:  309:}
        -:  310:
function numHandCards called 0 returned 0% blocks executed 0%
    #####:  311:int numHandCards(struct gameState *state) {
    #####:  312:  return state->handCount[ whoseTurn(state) ];
call    0 never executed
        -:  313:}
        -:  314:
function handCard called 0 returned 0% blocks executed 0%
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
call    0 never executed
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
function supplyCount called 0 returned 0% blocks executed 0%
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
function fullDeckCount called 0 returned 0% blocks executed 0%
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
function whoseTurn called 0 returned 0% blocks executed 0%
    #####:  346:int whoseTurn(struct gameState *state) {
    #####:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
function endTurn called 0 returned 0% blocks executed 0%
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
call    0 never executed
        -:  354:  
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:    
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){ 
branch  0 never executed
branch  1 never executed
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
branch  0 never executed
branch  1 never executed
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
call    0 never executed
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
call    0 never executed
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
function isGameOver called 0 returned 0% blocks executed 0%
    #####:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:	
        -:  394:  //if stack of Province cards is empty, the game ends
    #####:  395:  if (state->supplyCount[province] == 0)
branch  0 never executed
branch  1 never executed
        -:  396:    {
    #####:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
    #####:  401:  j = 0;
    #####:  402:  for (i = 0; i < 25; i++)
branch  0 never executed
branch  1 never executed
        -:  403:    {
    #####:  404:      if (state->supplyCount[i] == 0)
branch  0 never executed
branch  1 never executed
        -:  405:	{
    #####:  406:	  j++;
        -:  407:	}
        -:  408:    }
    #####:  409:  if ( j >= 3)
branch  0 never executed
branch  1 never executed
        -:  410:    {
    #####:  411:      return 1;
        -:  412:    }
        -:  413:
    #####:  414:  return 0;
        -:  415:}
        -:  416:
function scoreFor called 0 returned 0% blocks executed 0%
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
function getWinners called 0 returned 0% blocks executed 0%
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;	
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
branch  0 never executed
branch  1 never executed
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
call    0 never executed
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
branch  0 never executed
branch  1 never executed
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
call    0 never executed
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
branch  0 never executed
branch  1 never executed
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
branch  0 never executed
branch  1 never executed
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
function drawCard called 45334 returned 100% blocks executed 86%
    45334:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    45334:  528:  if (state->deckCount[player] <= 0){//Deck is empty
branch  0 taken 2% (fallthrough)
branch  1 taken 98%
        -:  529:    
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
      771:  533:    for (i = 0; i < state->discardCount[player];i++){
branch  0 taken 0%
branch  1 taken 100% (fallthrough)
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
      771:  538:    state->deckCount[player] = state->discardCount[player];
      771:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
      771:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
call    0 returned 100%
        -:  543:   
      771:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:    
      771:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
      771:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:    
      771:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:    
      771:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
      771:  559:    if (deckCounter == 0)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
      771:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    44563:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
    44563:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    44563:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    44563:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    44563:  576:    state->deckCount[player]--;
    44563:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    44563:  580:  return 0;
        -:  581:}
        -:  582:
function getCost called 0 returned 0% blocks executed 0%
    #####:  583:int getCost(int cardNumber)
        -:  584:{
    #####:  585:  switch( cardNumber ) 
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
        -:  586:    {
        -:  587:    case curse:
    #####:  588:      return 0;
        -:  589:    case estate:
    #####:  590:      return 2;
        -:  591:    case duchy:
    #####:  592:      return 5;
        -:  593:    case province:
    #####:  594:      return 8;
        -:  595:    case copper:
    #####:  596:      return 0;
        -:  597:    case silver:
    #####:  598:      return 3;
        -:  599:    case gold:
    #####:  600:      return 6;
        -:  601:    case adventurer:
    #####:  602:      return 6;
        -:  603:    case council_room:
    #####:  604:      return 5;
        -:  605:    case feast:
    #####:  606:      return 4;
        -:  607:    case gardens:
    #####:  608:      return 4;
        -:  609:    case mine:
    #####:  610:      return 5;
        -:  611:    case remodel:
    #####:  612:      return 4;
        -:  613:    case smithy:
    #####:  614:      return 4;
        -:  615:    case village:
    #####:  616:      return 3;
        -:  617:    case baron:
    #####:  618:      return 4;
        -:  619:    case great_hall:
    #####:  620:      return 3;
        -:  621:    case minion:
    #####:  622:      return 5;
        -:  623:    case steward:
    #####:  624:      return 3;
        -:  625:    case tribute:
    #####:  626:      return 5;
        -:  627:    case ambassador:
    #####:  628:      return 3;
        -:  629:    case cutpurse:
    #####:  630:      return 4;
        -:  631:    case embargo: 
    #####:  632:      return 2;
        -:  633:    case outpost:
    #####:  634:      return 5;
        -:  635:    case salvager:
    #####:  636:      return 4;
        -:  637:    case sea_hag:
    #####:  638:      return 4;
        -:  639:    case treasure_map:
    #####:  640:      return 4;
        -:  641:    }
        -:  642:	
    #####:  643:  return -1;
        -:  644:}
        -:  645:
        -:  646:// BOOKMARKER1
        -:  647:// START - Modified Cards
function callAdventurerCard called 1000 returned 100% blocks executed 100%
     1000:  648:int callAdventurerCard(struct gameState *state, int currentPlayer){
        -:  649:    int cardDrawn;
     1000:  650:    int drawntreasure = 0;
     1000:  651:    int z = 0;
        -:  652:    int temphand[MAX_HAND];
        -:  653:
    28452:  654:    while(drawntreasure<=2){
branch  0 taken 96%
branch  1 taken 4% (fallthrough)
    26452:  655:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
branch  0 taken 2% (fallthrough)
branch  1 taken 98%
      411:  656:          shuffle(currentPlayer, state);
call    0 returned 100%
        -:  657:        }
    26452:  658:        drawCard(currentPlayer, state);
call    0 returned 100%
    26452:  659:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    29452:  660:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
branch  0 taken 96% (fallthrough)
branch  1 taken 4%
branch  2 taken 96% (fallthrough)
branch  3 taken 4%
branch  4 taken 4% (fallthrough)
branch  5 taken 96%
     3000:  661:          drawntreasure++;
        -:  662:        else{
    23452:  663:          temphand[z]=cardDrawn;
    23452:  664:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
    23452:  665:          z++;
        -:  666:        }
        -:  667:    }
        -:  668:
    25452:  669:    while(z-1>=0){
branch  0 taken 96%
branch  1 taken 4% (fallthrough)
    23452:  670:        state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    23452:  671:        z=z-1;
        -:  672:    }
        -:  673:
     1000:  674:    return 0;
        -:  675:  }
        -:  676:
        -:  677:
function callSmithyCard called 0 returned 0% blocks executed 0%
    #####:  678:int callSmithyCard(struct gameState *state, int currentPlayer, int handPos){
        -:  679:  int i;
        -:  680:  
        -:  681:  //+3 Cards
    #####:  682:  for (i = 0; i < 3; i++){
branch  0 never executed
branch  1 never executed
    #####:  683:    drawCard(currentPlayer, state);
call    0 never executed
        -:  684:  }
        -:  685:  
        -:  686:  //discard card from hand
    #####:  687:  discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  688:  return 0;
        -:  689:}
        -:  690:
function callVillageCard called 1000 returned 100% blocks executed 100%
     1000:  691:int callVillageCard(int currentPlayer, struct gameState *state, int handPos){
        -:  692:     
        -:  693:      //+2 Actions
     1000:  694:      state->numActions = state->numActions + 2;
        -:  695:      
        -:  696:      //discard played card from hand
     1000:  697:      discardCard(handPos, currentPlayer, state, 0);
call    0 returned 100%
     1000:  698:      return 0;
        -:  699:}
        -:  700:
function callEmbargoCard called 0 returned 0% blocks executed 0%
    #####:  701:int callEmbargoCard(struct gameState *state, int choice1, int currentPlayer, int handPos){ 
        -:  702:      //+2 Coins
    #####:  703:      state->coins = state->coins + 2;
        -:  704:      
        -:  705:      //see if selected pile is in play
    #####:  706:      if ( state->supplyCount[choice1] == -1 )
branch  0 never executed
branch  1 never executed
        -:  707:  {
    #####:  708:    return -1;
        -:  709:  }
        -:  710:      
        -:  711:      //add embargo token to selected supply pile
    #####:  712:      state->embargoTokens[choice1] = state->embargoTokens[choice1] + 2;
        -:  713:      
        -:  714:      //trash card
    #####:  715:      discardCard(handPos, currentPlayer, state, 1);    
call    0 never executed
    #####:  716:      return 0;
        -:  717:}
        -:  718:
        -:  719://This one does not have any bugs ... at least it shouldn't 
function callOutpostCard called 0 returned 0% blocks executed 0%
    #####:  720:int callOutpostCard(struct gameState *state, int handPos, int currentPlayer){
        -:  721:  //set outpost flag
    #####:  722:  state->outpostPlayed++;
        -:  723:  
        -:  724:  //discard card
    #####:  725:  discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  726:  return 0;
        -:  727:}
        -:  728:
        -:  729:// END - Modified Cards
        -:  730:
        -:  731:
function cardEffect called 0 returned 0% blocks executed 0%
    #####:  732:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  733:{
        -:  734:  int i;
        -:  735:  int j;
        -:  736:  int k;
        -:  737:  int x;
        -:  738:  int index;
    #####:  739:  int currentPlayer = whoseTurn(state);
call    0 never executed
    #####:  740:  int nextPlayer = currentPlayer + 1;
        -:  741:
    #####:  742:  int tributeRevealedCards[2] = {-1, -1};
        -:  743:  int temphand[MAX_HAND];// moved above the if statement
    #####:  744:  int drawntreasure=0;
        -:  745:  int cardDrawn;
    #####:  746:  int z = 0;// this is the counter for the temp hand
    #####:  747:  if (nextPlayer > (state->numPlayers - 1)){
branch  0 never executed
branch  1 never executed
    #####:  748:    nextPlayer = 0;
        -:  749:  }
        -:  750:  
        -:  751:	
        -:  752:  //uses switch to select card and perform actions
    #####:  753:  switch( card ) 
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
        -:  754:    {
        -:  755:    case adventurer:
    #####:  756:      return callAdventurerCard(state, currentPlayer);
call    0 never executed
        -:  757:			
        -:  758:    case council_room:
        -:  759:      //+4 Cards
    #####:  760:      for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -:  761:	{
    #####:  762:	  drawCard(currentPlayer, state);
call    0 never executed
        -:  763:	}
        -:  764:			
        -:  765:      //+1 Buy
    #####:  766:      state->numBuys++;
        -:  767:			
        -:  768:      //Each other player draws a card
    #####:  769:      for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  770:	{
    #####:  771:	  if ( i != currentPlayer )
branch  0 never executed
branch  1 never executed
        -:  772:	    {
    #####:  773:	      drawCard(i, state);
call    0 never executed
        -:  774:	    }
        -:  775:	}
        -:  776:			
        -:  777:      //put played card in played card pile
    #####:  778:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  779:			
    #####:  780:      return 0;
        -:  781:			
        -:  782:    case feast:
        -:  783:      //gain card with cost up to 5
        -:  784:      //Backup hand
    #####:  785:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  786:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  787:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  788:      }
        -:  789:      //Backup hand
        -:  790:
        -:  791:      //Update Coins for Buy
    #####:  792:      updateCoins(currentPlayer, state, 5);
call    0 never executed
    #####:  793:      x = 1;//Condition to loop on
    #####:  794:      while( x == 1) {//Buy one card
branch  0 never executed
branch  1 never executed
    #####:  795:	if (supplyCount(choice1, state) <= 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  796:	  if (DEBUG)
        -:  797:	    printf("None of that card left, sorry!\n");
        -:  798:
    #####:  799:	  if (DEBUG){
        -:  800:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  801:	  }
        -:  802:	}
    #####:  803:	else if (state->coins < getCost(choice1)){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  804:	  printf("That card is too expensive!\n");
call    0 never executed
        -:  805:
    #####:  806:	  if (DEBUG){
        -:  807:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  808:	  }
        -:  809:	}
        -:  810:	else{
        -:  811:
    #####:  812:	  if (DEBUG){
        -:  813:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  814:	  }
        -:  815:
    #####:  816:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
call    0 never executed
    #####:  817:	  x = 0;//No more buying cards
        -:  818:
    #####:  819:	  if (DEBUG){
        -:  820:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  821:	  }
        -:  822:
        -:  823:	}
        -:  824:      }     
        -:  825:
        -:  826:      //Reset Hand
    #####:  827:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  828:	state->hand[currentPlayer][i] = temphand[i];
    #####:  829:	temphand[i] = -1;
        -:  830:      }
        -:  831:      //Reset Hand
        -:  832:      			
    #####:  833:      return 0;
        -:  834:			
        -:  835:    case gardens:
    #####:  836:      return -1;
        -:  837:			
        -:  838:    case mine:
    #####:  839:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  840:
    #####:  841:      if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  842:	{
    #####:  843:	  return -1;
        -:  844:	}
        -:  845:		
    #####:  846:      if (choice2 > treasure_map || choice2 < curse)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  847:	{
    #####:  848:	  return -1;
        -:  849:	}
        -:  850:
    #####:  851:      if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  852:	{
    #####:  853:	  return -1;
        -:  854:	}
        -:  855:
    #####:  856:      gainCard(choice2, state, 2, currentPlayer);
call    0 never executed
        -:  857:
        -:  858:      //discard card from hand
    #####:  859:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  860:
        -:  861:      //discard trashed card
    #####:  862:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:  863:	{
    #####:  864:	  if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -:  865:	    {
    #####:  866:	      discardCard(i, currentPlayer, state, 0);			
call    0 never executed
    #####:  867:	      break;
        -:  868:	    }
        -:  869:	}
        -:  870:			
    #####:  871:      return 0;
        -:  872:			
        -:  873:    case remodel:
    #####:  874:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  875:
    #####:  876:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  877:	{
    #####:  878:	  return -1;
        -:  879:	}
        -:  880:
    #####:  881:      gainCard(choice2, state, 0, currentPlayer);
call    0 never executed
        -:  882:
        -:  883:      //discard card from hand
    #####:  884:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  885:
        -:  886:      //discard trashed card
    #####:  887:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:  888:	{
    #####:  889:	  if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -:  890:	    {
    #####:  891:	      discardCard(i, currentPlayer, state, 0);			
call    0 never executed
    #####:  892:	      break;
        -:  893:	    }
        -:  894:	}
        -:  895:
        -:  896:
    #####:  897:      return 0;
        -:  898:		
        -:  899:    case smithy:
    #####:  900:      return callSmithyCard(state, currentPlayer, handPos);
call    0 never executed
        -:  901:		
        -:  902:    case village:
    #####:  903:      return callVillageCard(currentPlayer, state, handPos);
call    0 never executed
        -:  904:		
        -:  905:    case baron:
    #####:  906:      state->numBuys++;//Increase buys by 1!
    #####:  907:      if (choice1 > 0){//Boolean true or going to discard an estate
branch  0 never executed
branch  1 never executed
    #####:  908:	int p = 0;//Iterator for hand!
    #####:  909:	int card_not_discarded = 1;//Flag for discard set!
    #####:  910:	while(card_not_discarded){
branch  0 never executed
branch  1 never executed
    #####:  911:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
branch  0 never executed
branch  1 never executed
    #####:  912:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  913:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  914:	    state->discardCount[currentPlayer]++;
    #####:  915:	    for (;p < state->handCount[currentPlayer]; p++){
branch  0 never executed
branch  1 never executed
    #####:  916:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  917:	    }
    #####:  918:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  919:	    state->handCount[currentPlayer]--;
    #####:  920:	    card_not_discarded = 0;//Exit the loop
        -:  921:	  }
    #####:  922:	  else if (p > state->handCount[currentPlayer]){
branch  0 never executed
branch  1 never executed
    #####:  923:	    if(DEBUG) {
        -:  924:	      printf("No estate cards in your hand, invalid choice\n");
        -:  925:	      printf("Must gain an estate if there are any\n");
        -:  926:	    }
    #####:  927:	    if (supplyCount(estate, state) > 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  928:	      gainCard(estate, state, 0, currentPlayer);
call    0 never executed
    #####:  929:	      state->supplyCount[estate]--;//Decrement estates
    #####:  930:	      if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  931:		isGameOver(state);
call    0 never executed
        -:  932:	      }
        -:  933:	    }
    #####:  934:	    card_not_discarded = 0;//Exit the loop
        -:  935:	  }
        -:  936:			    
        -:  937:	  else{
    #####:  938:	    p++;//Next card
        -:  939:	  }
        -:  940:	}
        -:  941:      }
        -:  942:			    
        -:  943:      else{
    #####:  944:	if (supplyCount(estate, state) > 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  945:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
call    0 never executed
    #####:  946:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  947:	  if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  948:	    isGameOver(state);
call    0 never executed
        -:  949:	  }
        -:  950:	}
        -:  951:      }
        -:  952:	    
        -:  953:      
    #####:  954:      return 0;
        -:  955:		
        -:  956:    case great_hall:
        -:  957:      //+1 Card
    #####:  958:      drawCard(currentPlayer, state);
call    0 never executed
        -:  959:			
        -:  960:      //+1 Actions
    #####:  961:      state->numActions++;
        -:  962:			
        -:  963:      //discard card from hand
    #####:  964:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  965:      return 0;
        -:  966:		
        -:  967:    case minion:
        -:  968:      //+1 action
    #####:  969:      state->numActions++;
        -:  970:			
        -:  971:      //discard card from hand
    #####:  972:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  973:			
    #####:  974:      if (choice1)		//+2 coins
branch  0 never executed
branch  1 never executed
        -:  975:	{
    #####:  976:	  state->coins = state->coins + 2;
        -:  977:	}
        -:  978:			
    #####:  979:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
branch  0 never executed
branch  1 never executed
        -:  980:	{
        -:  981:	  //discard hand
    #####:  982:	  while(numHandCards(state) > 0)
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  983:	    {
    #####:  984:	      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  985:	    }
        -:  986:				
        -:  987:	  //draw 4
    #####:  988:	  for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -:  989:	    {
    #####:  990:	      drawCard(currentPlayer, state);
call    0 never executed
        -:  991:	    }
        -:  992:				
        -:  993:	  //other players discard hand and redraw if hand size > 4
    #####:  994:	  for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  995:	    {
    #####:  996:	      if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -:  997:		{
    #####:  998:		  if ( state->handCount[i] > 4 )
branch  0 never executed
branch  1 never executed
        -:  999:		    {
        -: 1000:		      //discard hand
    #####: 1001:		      while( state->handCount[i] > 0 )
branch  0 never executed
branch  1 never executed
        -: 1002:			{
    #####: 1003:			  discardCard(handPos, i, state, 0);
call    0 never executed
        -: 1004:			}
        -: 1005:							
        -: 1006:		      //draw 4
    #####: 1007:		      for (j = 0; j < 4; j++)
branch  0 never executed
branch  1 never executed
        -: 1008:			{
    #####: 1009:			  drawCard(i, state);
call    0 never executed
        -: 1010:			}
        -: 1011:		    }
        -: 1012:		}
        -: 1013:	    }
        -: 1014:				
        -: 1015:	}
    #####: 1016:      return 0;
        -: 1017:		
        -: 1018:    case steward:
    #####: 1019:      if (choice1 == 1)
branch  0 never executed
branch  1 never executed
        -: 1020:	{
        -: 1021:	  //+2 cards
    #####: 1022:	  drawCard(currentPlayer, state);
call    0 never executed
    #####: 1023:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1024:	}
    #####: 1025:      else if (choice1 == 2)
branch  0 never executed
branch  1 never executed
        -: 1026:	{
        -: 1027:	  //+2 coins
    #####: 1028:	  state->coins = state->coins + 2;
        -: 1029:	}
        -: 1030:      else
        -: 1031:	{
        -: 1032:	  //trash 2 cards in hand
    #####: 1033:	  discardCard(choice2, currentPlayer, state, 1);
call    0 never executed
    #####: 1034:	  discardCard(choice3, currentPlayer, state, 1);
call    0 never executed
        -: 1035:	}
        -: 1036:			
        -: 1037:      //discard card from hand
    #####: 1038:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1039:      return 0;
        -: 1040:		
        -: 1041:    case tribute:
    #####: 1042:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
branch  0 never executed
branch  1 never executed
    #####: 1043:	if (state->deckCount[nextPlayer] > 0){
branch  0 never executed
branch  1 never executed
    #####: 1044:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1045:	  state->deckCount[nextPlayer]--;
        -: 1046:	}
    #####: 1047:	else if (state->discardCount[nextPlayer] > 0){
branch  0 never executed
branch  1 never executed
    #####: 1048:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1049:	  state->discardCount[nextPlayer]--;
        -: 1050:	}
        -: 1051:	else{
        -: 1052:	  //No Card to Reveal
    #####: 1053:	  if (DEBUG){
        -: 1054:	    printf("No cards to reveal\n");
        -: 1055:	  }
        -: 1056:	}
        -: 1057:      }
        -: 1058:	    
        -: 1059:      else{
    #####: 1060:	if (state->deckCount[nextPlayer] == 0){
branch  0 never executed
branch  1 never executed
    #####: 1061:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####: 1062:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1063:	    state->deckCount[nextPlayer]++;
    #####: 1064:	    state->discard[nextPlayer][i] = -1;
    #####: 1065:	    state->discardCount[nextPlayer]--;
        -: 1066:	  }
        -: 1067:			    
    #####: 1068:	  shuffle(nextPlayer,state);//Shuffle the deck
call    0 never executed
        -: 1069:	} 
    #####: 1070:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1071:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1072:	state->deckCount[nextPlayer]--;
    #####: 1073:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1074:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1075:	state->deckCount[nextPlayer]--;
        -: 1076:      }    
        -: 1077:		       
    #####: 1078:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
branch  0 never executed
branch  1 never executed
    #####: 1079:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1080:	state->playedCardCount++;
    #####: 1081:	tributeRevealedCards[1] = -1;
        -: 1082:      }
        -: 1083:
    #####: 1084:      for (i = 0; i <= 2; i ++){
branch  0 never executed
branch  1 never executed
    #####: 1085:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####: 1086:	  state->coins += 2;
        -: 1087:	}
        -: 1088:		    
    #####: 1089:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
    #####: 1090:	  drawCard(currentPlayer, state);
call    0 never executed
    #####: 1091:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1092:	}
        -: 1093:	else{//Action Card
    #####: 1094:	  state->numActions = state->numActions + 2;
        -: 1095:	}
        -: 1096:      }
        -: 1097:	    
    #####: 1098:      return 0;
        -: 1099:		
        -: 1100:    case ambassador:
    #####: 1101:      j = 0;		//used to check if player has enough cards to discard
        -: 1102:
    #####: 1103:      if (choice2 > 2 || choice2 < 0)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -: 1104:	{
    #####: 1105:	  return -1;				
        -: 1106:	}
        -: 1107:
    #####: 1108:      if (choice1 == handPos)
branch  0 never executed
branch  1 never executed
        -: 1109:	{
    #####: 1110:	  return -1;
        -: 1111:	}
        -: 1112:
    #####: 1113:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1114:	{
    #####: 1115:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
        -: 1116:	    {
    #####: 1117:	      j++;
        -: 1118:	    }
        -: 1119:	}
    #####: 1120:      if (j < choice2)
branch  0 never executed
branch  1 never executed
        -: 1121:	{
    #####: 1122:	  return -1;				
        -: 1123:	}
        -: 1124:
    #####: 1125:      if (DEBUG) 
        -: 1126:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1127:
        -: 1128:      //increase supply count for choosen card by amount being discarded
    #####: 1129:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1130:			
        -: 1131:      //each other player gains a copy of revealed card
    #####: 1132:      for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -: 1133:	{
    #####: 1134:	  if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -: 1135:	    {
    #####: 1136:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
call    0 never executed
        -: 1137:	    }
        -: 1138:	}
        -: 1139:
        -: 1140:      //discard played card from hand
    #####: 1141:      discardCard(handPos, currentPlayer, state, 0);			
call    0 never executed
        -: 1142:
        -: 1143:      //trash copies of cards returned to supply
    #####: 1144:      for (j = 0; j < choice2; j++)
branch  0 never executed
branch  1 never executed
        -: 1145:	{
    #####: 1146:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1147:	    {
    #####: 1148:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
branch  0 never executed
branch  1 never executed
        -: 1149:		{
    #####: 1150:		  discardCard(i, currentPlayer, state, 1);
call    0 never executed
    #####: 1151:		  break;
        -: 1152:		}
        -: 1153:	    }
        -: 1154:	}			
        -: 1155:
    #####: 1156:      return 0;
        -: 1157:		
        -: 1158:    case cutpurse:
        -: 1159:
    #####: 1160:      updateCoins(currentPlayer, state, 2);
call    0 never executed
    #####: 1161:      for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -: 1162:	{
    #####: 1163:	  if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -: 1164:	    {
    #####: 1165:	      for (j = 0; j < state->handCount[i]; j++)
branch  0 never executed
branch  1 never executed
        -: 1166:		{
    #####: 1167:		  if (state->hand[i][j] == copper)
branch  0 never executed
branch  1 never executed
        -: 1168:		    {
    #####: 1169:		      discardCard(j, i, state, 0);
call    0 never executed
    #####: 1170:		      break;
        -: 1171:		    }
    #####: 1172:		  if (j == state->handCount[i])
branch  0 never executed
branch  1 never executed
        -: 1173:		    {
    #####: 1174:		      for (k = 0; k < state->handCount[i]; k++)
branch  0 never executed
branch  1 never executed
        -: 1175:			{
    #####: 1176:			  if (DEBUG)
        -: 1177:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1178:			}	
    #####: 1179:		      break;
        -: 1180:		    }		
        -: 1181:		}
        -: 1182:					
        -: 1183:	    }
        -: 1184:				
        -: 1185:	}				
        -: 1186:
        -: 1187:      //discard played card from hand
    #####: 1188:      discardCard(handPos, currentPlayer, state, 0);			
call    0 never executed
        -: 1189:
    #####: 1190:      return 0;
        -: 1191:
        -: 1192:		
        -: 1193:    case embargo: 
    #####: 1194:      return callEmbargoCard(state, choice1, currentPlayer, handPos);   
call    0 never executed
        -: 1195:		
        -: 1196:    case outpost:
    #####: 1197:      return callOutpostCard(state, handPos, currentPlayer);
call    0 never executed
        -: 1198:		
        -: 1199:    case salvager:
        -: 1200:      //+1 buy
    #####: 1201:      state->numBuys++;
        -: 1202:			
    #####: 1203:      if (choice1)
branch  0 never executed
branch  1 never executed
        -: 1204:	{
        -: 1205:	  //gain coins equal to trashed card
    #####: 1206:	  state->coins = state->coins + getCost( handCard(choice1, state) );
call    0 never executed
call    1 never executed
        -: 1207:	  //trash card
    #####: 1208:	  discardCard(choice1, currentPlayer, state, 1);	
call    0 never executed
        -: 1209:	}
        -: 1210:			
        -: 1211:      //discard card
    #####: 1212:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1213:      return 0;
        -: 1214:		
        -: 1215:    case sea_hag:
    #####: 1216:      for (i = 0; i < state->numPlayers; i++){
branch  0 never executed
branch  1 never executed
    #####: 1217:	if (i != currentPlayer){
branch  0 never executed
branch  1 never executed
    #####: 1218:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1219:	  state->discardCount[i]++;
    #####: 1220:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1221:	}
        -: 1222:      }
    #####: 1223:      return 0;
        -: 1224:		
        -: 1225:    case treasure_map:
        -: 1226:      //search hand for another treasure_map
    #####: 1227:      index = -1;
    #####: 1228:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1229:	{
    #####: 1230:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -: 1231:	    {
    #####: 1232:	      index = i;
    #####: 1233:	      break;
        -: 1234:	    }
        -: 1235:	}
    #####: 1236:      if (index > -1)
branch  0 never executed
branch  1 never executed
        -: 1237:	{
        -: 1238:	  //trash both treasure cards
    #####: 1239:	  discardCard(handPos, currentPlayer, state, 1);
call    0 never executed
    #####: 1240:	  discardCard(index, currentPlayer, state, 1);
call    0 never executed
        -: 1241:
        -: 1242:	  //gain 4 Gold cards
    #####: 1243:	  for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -: 1244:	    {
    #####: 1245:	      gainCard(gold, state, 1, currentPlayer);
call    0 never executed
        -: 1246:	    }
        -: 1247:				
        -: 1248:	  //return success
    #####: 1249:	  return 1;
        -: 1250:	}
        -: 1251:			
        -: 1252:      //no second treasure_map found in hand
    #####: 1253:      return -1;
        -: 1254:    }
        -: 1255:	
    #####: 1256:  return -1;
        -: 1257:}
        -: 1258:
function discardCard called 2000 returned 100% blocks executed 88%
     2000: 1259:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1260:{
        -: 1261:	
        -: 1262:  //if card is not trashed, added to Played pile 
     2000: 1263:  if (trashFlag < 1)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1264:    {
        -: 1265:      //add card to played pile
     2000: 1266:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
     2000: 1267:      state->playedCardCount++;
        -: 1268:    }
        -: 1269:	
        -: 1270:  //set played card to -1
     2000: 1271:  state->hand[currentPlayer][handPos] = -1;
        -: 1272:	
        -: 1273:  //remove card from player's hand
     2000: 1274:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1275:    {
        -: 1276:      //reduce number of cards in hand
       26: 1277:      state->handCount[currentPlayer]--;
        -: 1278:    }
     1974: 1279:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -: 1280:    {
        -: 1281:      //reduce number of cards in hand
    #####: 1282:      state->handCount[currentPlayer]--;
        -: 1283:    }
        -: 1284:  else 	
        -: 1285:    {
        -: 1286:      //replace discarded card with last card in hand
     1974: 1287:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1288:      //set last card to -1
     1974: 1289:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1290:      //reduce number of cards in hand
     1974: 1291:      state->handCount[currentPlayer]--;
        -: 1292:    }
        -: 1293:	
     2000: 1294:  return 0;
        -: 1295:}
        -: 1296:
function gainCard called 0 returned 0% blocks executed 0%
    #####: 1297:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1298:{
        -: 1299:  //Note: supplyPos is enum of choosen card
        -: 1300:	
        -: 1301:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1302:  if ( supplyCount(supplyPos, state) < 1 )
call    0 never executed
branch  1 never executed
branch  2 never executed
        -: 1303:    {
    #####: 1304:      return -1;
        -: 1305:    }
        -: 1306:	
        -: 1307:  //added card for [whoseTurn] current player:
        -: 1308:  // toFlag = 0 : add to discard
        -: 1309:  // toFlag = 1 : add to deck
        -: 1310:  // toFlag = 2 : add to hand
        -: 1311:
    #####: 1312:  if (toFlag == 1)
branch  0 never executed
branch  1 never executed
        -: 1313:    {
    #####: 1314:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1315:      state->deckCount[player]++;
        -: 1316:    }
    #####: 1317:  else if (toFlag == 2)
branch  0 never executed
branch  1 never executed
        -: 1318:    {
    #####: 1319:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1320:      state->handCount[player]++;
        -: 1321:    }
        -: 1322:  else
        -: 1323:    {
    #####: 1324:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1325:      state->discardCount[player]++;
        -: 1326:    }
        -: 1327:	
        -: 1328:  //decrease number in supply pile
    #####: 1329:  state->supplyCount[supplyPos]--;
        -: 1330:	 
    #####: 1331:  return 0;
        -: 1332:}
        -: 1333:
function updateCoins called 0 returned 0% blocks executed 0%
    #####: 1334:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1335:{
        -: 1336:  int i;
        -: 1337:	
        -: 1338:  //reset coin count
    #####: 1339:  state->coins = 0;
        -: 1340:
        -: 1341:  //add coins for each Treasure card in player's hand
    #####: 1342:  for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -: 1343:    {
    #####: 1344:      if (state->hand[player][i] == copper)
branch  0 never executed
branch  1 never executed
        -: 1345:	{
    #####: 1346:	  state->coins += 1;
        -: 1347:	}
    #####: 1348:      else if (state->hand[player][i] == silver)
branch  0 never executed
branch  1 never executed
        -: 1349:	{
    #####: 1350:	  state->coins += 2;
        -: 1351:	}
    #####: 1352:      else if (state->hand[player][i] == gold)
branch  0 never executed
branch  1 never executed
        -: 1353:	{
    #####: 1354:	  state->coins += 3;
        -: 1355:	}	
        -: 1356:    }	
        -: 1357:
        -: 1358:  //add bonus
    #####: 1359:  state->coins += bonus;
        -: 1360:
    #####: 1361:  return 0;
        -: 1362:}
        -: 1363:
        -: 1364://end of dominion.c
        -: 1365:
